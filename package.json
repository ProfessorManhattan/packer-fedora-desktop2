{
  "name": "@megabytelabs/packer-fedora-desktop",
  "version": "1.0.0",
  "description": "An automated Fedora Workstation (currently, version 34.1) Packer project that builds boxes using the latest Fedora Server release",
  "license": "MIT",
  "author": "Brian Zalewski <brian@megabyte.space> (https://megabyte.space)",
  "homepage": "https://megabyte.space",
  "repository": {
    "type": "git",
    "url": "git+https://gitlab.com/megabyte-labs/packer/fedora-desktop.git"
  },
  "bugs": {
    "email": "help@megabyte.space",
    "url": "https://gitlab.com/megabyte-labs/packer/fedora-desktop/-/issues"
  },
  "scripts": {
    "build": "trash build && packer build template.json",
    "build:kvm": "trash build && packer build -only=qemu template.json",
    "build:parallels": "trash build && packer build -only=parallels-iso template.json",
    "build:virtualbox": "trash build && packer build -only=virtualbox-iso template.json",
    "build:vmware": "trash build && packer build -only=vmware-iso template.json",
    "commit": "git-cz",
    "fix": "run-s fix:*",
    "fix:packer": "for TEMPLATE in *template.json; do packer fix $TEMPLATE > __$TEMPLATE; mv __$TEMPLATE $TEMPLATE; done",
    "fix:prettier": "prettier --write .",
    "fix:shellcheck": "find . -type d \\( -name .cache -o -name .git -o -name .modules  -o -name node_modules -o -name .husky \\) -prune -o -type f \\( -name \\*.custom.sh -o -name \\*.custom.sh.j2 \\) -print0 | xargs -0 shellcheck -f diff | git apply",
    "info": "npm-scripts-info",
    "postinstall": "husky install && run-s update",
    "launch": "vagrant up",
    "misc:markdown-links": "find . -type d \\( -name .cache -o -name .git -o -name .github -o -name .gitlab -o -name .modules  -o -name node_modules \\) -prune -o -type f \\( -name \\*.md \\) -print0 | xargs -0 -r -n1 markdown-link-check",
    "prepare-release": "run-s update test version",
    "test": "run-s test:*",
    "test:packer": "for TEMPLATE in *template.json; do packer validate $TEMPLATE; done",
    "test:prettier": "prettier --list-different .",
    "test:shellcheck": "find . -type d \\( -name .cache -o -name .git -o -name .modules  -o -name node_modules -o -name .husky \\) -prune -o -type f \\( -name \\*.custom.sh -o -name \\*.custom.sh.j2 \\) -print0 | xargs -0 -r -n1 shellcheck",
    "test:vagrant": "vagrant validate",
    "update": "bash .start.sh && cp ./.modules/packer/.start.sh .start.sh",
    "version": "standard-version -a --no-verify"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "blueprint": {
      "description": "An automated Fedora Workstation Packer project that builds images starting with the latest Fedora Server release and then converts it to a full-fledged Fedora Workstation version",
      "description_template": "Fedora Workstation MAJOR_VERSION",
      "description_template_package": "An automated Fedora Workstation (currently, version MAJOR_VERSION.MINOR_VERSION) Packer project that builds boxes using the latest Fedora Server release",
      "overview": "This project houses configurations that can be used to build performant [Fedora Workstation](https://getfedora.org/en/workstation/) images. It uses a Fedora Server image as a base, uses Packer to automate the build process, and then sets the image up using some [Bento scripts](https://github.com/chef/bento/tree/main/packer_templates/ubuntu/scripts) which take care of optimizing the image for your system (i.e. setting up SSH with the Vagrant default public key, setting up GuestAdditions for VirtualBox, etc.). This project is intended to be used to create desktop images that you would launch from your main desktop using a GUI. If you are looking for headless images, you should either use [Bento's server images](https://app.vagrantup.com/bento). You might also have some luck browsing through our [Packer projects](https://gitlab.com/megabyte-labs/packer).",
      "hostname": "vagrant-fedora",
      "group": "packer",
      "name": "Fedora Workstation",
      "repository": {
        "github": "https://github.com/megabyte-labs/packer-fedora-desktop",
        "gitlab": "https://gitlab.com/megabyte-labs/packer/fedora-desktop"
      },
      "slug": "fedora-desktop",
      "subgroup": "desktop",
      "title": "Fedora Workstation Template for Packer",
      "vagrant_tag": "fedora",
      "version_description": "A Fedora Workstation ISO_VERSION box. Built from the Fedora Server ISO_VERSION image. See https://github.com/megabyte-labs/packer-fedora-desktop for more details."
  },
  "devDependencies": {
    "@megabytelabs/prettier-config": "^1.2.893",
    "consola": "^2.15.3",
    "cspell": "^5.4.0",
    "cz-conventional-changelog": "^3.3.0",
    "husky": "^5.2.0",
    "lint-staged": "^11.0.0",
    "markdown-link-check": "^3.8.7",
    "npm-run-all": "^4.1.5",
    "npm-scripts-info": "^0.3.9",
    "prettier": "^2.1.1",
    "prettier-package-json": "^2.5.0",
    "prettier-plugin-sh": "^0.6.1",
    "shellcheck": "^1.0.0",
    "standard-version": "^9.3.0",
    "trash-cli": "^4.0.0"
  },
  "keywords": [
    "accelerated",
    "compressed",
    "desktop",
    "fedora-desktop",
    "optimized",
    "packer",
    "workstation"
  ],
  "engines": {
    "node": ">=10"
  },
  "funding": [
    {
      "type": "opencollective",
      "url": "https://opencollective.com/megabytelabs"
    },
    {
      "type": "patreon",
      "url": "https://www.patreon.com/ProfessorManhattan"
    }
  ],
  "lint-staged": {
    "*.{json}": [
      "prettier --write"
    ],
    "scripts/*.custom.sh": [
      "prettier --write"
    ],
    "package.json": [
      "prettier-package-json --write"
    ]
  },
  "prettier": "@megabytelabs/prettier-config",
  "scripts-info": {
    "build": "Build all of the images",
    "build:kvm": "Build a QEMU/KVM image",
    "build:parallels": "Build a Parallels image",
    "build:virtualbox": "Build a VirtualBox image",
    "build:vmware": "Build a VMWare image",
    "commit": "The preferred way of running git commit (instead of git commit, we prefer running 'npm run commit')",
    "fix": "Automatically fix formatting errors",
    "info": "Logs descriptions of all the npm tasks",
    "launch": "Runs 'vagrant up' to automatically spin up the VM",
    "misc:markdown-links": "Checks markdown files for broken links",
    "prepare-release": "Updates the CHANGELOG with commits made using 'npm run commit' and updates the project to be ready for release",
    "test": "Validates the Packer configuration file (i.e. template.json) and performs some other linting",
    "update": "Runs .start.sh to automatically update meta files and documentation",
    "version": "Used by 'npm run prepare-release' to update the CHANGELOG and app version"
  },
  "standard-version": {
    "scripts": {
      "prebump": "jq -r '.variables.iso_version' template.json",
      "prerelease": "git add --all",
      "pretag": "PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]') && if git show-ref --tags v$PACKAGE_VERSION --quiet; then git tag -d v$PACKAGE_VERSION; fi"
    }
  }
}
